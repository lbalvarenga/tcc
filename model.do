qui {	clear all	local BASE_PATH "\\wsl.localhost\Debian\home\lal\work\uel\tcc"local BLOCK_PROMPT 1  cd `BASE_PATH'do "utils\utils.do"	sysuse autoimport delimited "data\stata\joined_02_23.csv", clear// Vars coletadaslabel var date "Mês"label var rate "Taxa de Câmbio (R$/USD)"label var ipa_ep_di "Índice de Preços ao Produtor Amplo"label var ipca "Índice de Preços ao Consumidor Amplo"label var pibdefl03 "Produto Interno Bruto Deflacionado (2003)"label var selic "Taxa SELIC"label var metabcb "Meta de Inflação do Banco Central"// Vars para gerar...gen months = monthly(date, "YM")format months %tm// Configurar serie temporaln tsset months, monthly// TODO: ADF para todas vars// Testes de estacionariedaden _print "------- TESTES: ADF, PP -------" n _print "*************** Taxa de Câmbio (R$/USD) ****************"n dfuller rate // > 0.05 -> fazer diffn pperron rate // > 0.05 -> fazer diffn _print "********** Índice de Preços ao Produtor Amplo **********"n dfuller ipa_ep_di // > 0.05 -> fazer diffn pperron ipa_ep_di // > 0.05 -> fazer diffn _print "********* Índice de Preços ao Consumidor Amplo *********"n dfuller ipca // < 0.05 estacionarialocal beta_1a = r(Zt)local p_1a = r(p)n pperron ipca // < 0.05 estacionarialocal beta_1b = r(Zt)local p_1b = r(p)n _print "****** Produto Interno Bruto Deflacionado (2003) ******"n dfuller pibdefl03 // > 0.05 -> fazer diffn pperron pibdefl03 // > 0.05 -> fazer diffn _print "********************** Taxa SELIC *********************"n dfuller selic // < 0.05 -> estacionarialocal beta_2a = r(Zt)local p_2a = r(p)n pperron selic // < 0.05 -> estacionarialocal beta_2b = r(Zt)local p_2b = r(p)n _print "********** Meta de Inflação do Banco Central **********"n dfuller metabcb // < 0.05 -> estacionarialocal beta_3a = r(Zt)local p_3a = r(p)n pperron metabcb // < 0.05 -> estacionarialocal beta_3b = r(Zt)local p_3b = r(p)// Criacao vars diffgen d_rate = d.rategen d_ipa_ep_di = d.ipa_ep_digen d_pibdefl03 = d.pibdefl03n _print "*******************************************************"n _print "------- TESTES CORRIGIDOS: ADF, PP -------" n _print "*************** Taxa de Câmbio (R$/USD) ****************"n dfuller d_rate // < 0.05 -> estacionarialocal beta_4a = r(Zt)local p_4a = r(p)n pperron d_rate // < 0.05 -> estacionarialocal beta_4b = r(Zt)local p_4b = r(p)n _print "********** Índice de Preços ao Produtor Amplo **********"n dfuller d_ipa_ep_di // < 0.05 -> estacionarialocal beta_5a = r(Zt)local p_5a = r(p)n pperron d_ipa_ep_di // < 0.05 -> estacionarialocal beta_5b = r(Zt)local p_5b = r(p)n _print "****** Produto Interno Bruto Deflacionado (2003) ******"n dfuller d_pibdefl03 // < 0.05 -> estacionarialocal beta_6a = r(Zt)local p_6a = r(p)n pperron d_pibdefl03 // < 0.05 -> estacionarialocal beta_6b = r(Zt)local p_6b = r(p)// Salvar dfuller e ppquietly {	capture log close csv	log using "stataout\adf.csv", replace text name(csv)		noisily di "var,adf,pval"		noisily di "ipca," %4.2f `beta_1a' "," %4.3f `p_1a'		noisily di "selic," %4.2f `beta_2a' "," %4.3f `p_2a'		noisily di "metabcb," %4.2f `beta_3a' "," %4.3f `p_3a'		noisily di "d_rate," %4.2f `beta_4a' "," %4.3f `p_4a'		noisily di "d_ipa_ep_di," %4.2f `beta_5a' "," %4.3f `p_5a'		noisily di "d_pibdefl03," %4.2f `beta_6a' "," %4.3f `p_6a'	capture log close csv	log using "stataout\pp.csv", replace text name(csv)		noisily di "var,pp,pval"		noisily di "ipca," %4.2f `beta_1b' "," %4.3f `p_1b'		noisily di "selic," %4.2f `beta_2b' "," %4.3f `p_2b'		noisily di "metabcb," %4.2f `beta_3b' "," %4.3f `p_3b'		noisily di "d_rate," %4.2f `beta_4b' "," %4.3f `p_4b'		noisily di "d_ipa_ep_di," %4.2f `beta_5b' "," %4.3f `p_5b'		noisily di "d_pibdefl03," %4.2f `beta_6b' "," %4.3f `p_6b'	capture log close csv}}